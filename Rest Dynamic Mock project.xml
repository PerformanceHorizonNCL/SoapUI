<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="10473fef-8fb0-42fa-af98-171682506c41" activeEnvironment="Default" name="REST Dynamic Mock" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="388ee286-2ec7-4feb-ab0d-82a58b52c652" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8080" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://Ragini:8080/</con:endpoint><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="Getting user information" path="/user/67902" id="b474e48d-fe87-4de5-ab8a-e6f2f020ad79"><con:settings/><con:parameters/><con:method name="Method 1" id="72ecd38c-ba4b-4273-a8d6-a416d8db0570" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:user="http://localhost/user">user:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request for User" id="bfce39f8-beac-48e7-8ef8-4eaaf223d771" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://Ragini:8080/</con:endpoint><con:request/><con:originalUri>http://Ragini/user/67000</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Post User" path="/user/67901" id="b474e48d-fe87-4de5-ab8a-e6f2f020ad79"><con:settings/><con:parameters/><con:method name="Method 1" id="72ecd38c-ba4b-4273-a8d6-a416d8db0570" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:user="http://localhost/user">user:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="b4758ecc-bac8-4b4c-8956-0e1765c288c6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>Posting new user detail</con:request><con:originalUri>http://localhost/user</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="c21d99bc-3f24-427f-8a0f-c8bfa9b352bd" name="http://localhost:8080 TestSuite"><con:description>TestSuite generated for REST Service [http://localhost:8080]</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4b83dfd6-70d9-4933-8039-31d059b980c9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_Getting user information" searchProperties="true"><con:description>TestCase generated for REST Resource [Getting user information for 67898] located at [/user/67898]</con:description><con:settings/><con:testStep type="restrequest" name="Request User" id="3fa06bf5-6065-4457-85ef-56349d5c309b"><con:settings/><con:config service="http://localhost:8080" resourcePath="/user/67902" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Request for 67900" id="bfce39f8-beac-48e7-8ef8-4eaaf223d771" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://Ragini:8080/</con:endpoint><con:request/><con:originalUri>http://Ragini/user/67000</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1d5b8ca0-bf89-4baa-86aa-9ea433746c42" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_Post User" searchProperties="true"><con:description>TestCase generated for REST Resource [Post User 67899] located at [/user/67899]</con:description><con:settings/><con:testStep type="restrequest" name="Post User" id="d26022bd-44d3-443e-ad88-8732d4761b36"><con:settings/><con:config service="http://localhost:8080" resourcePath="/user/67901" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Request" id="b4758ecc-bac8-4b4c-8956-0e1765c288c6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request>Posting new user detail</con:request><con:originalUri>http://localhost/user</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id="1898b826-04b1-418d-8c44-607dbc82b84c" port="8080" path="/" host="Ragini" name="MockService"><con:settings/><con:properties/><con:restMockAction name="user" method="GET" resourcePath="/user" id="7fc0cbf2-69dd-4e90-b8cf-0119da471b59"><con:settings/><con:defaultResponse>user/67898</con:defaultResponse><con:dispatchStyle>SCRIPT</con:dispatchStyle><con:dispatchPath>def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath
// return the name of the response you want to dispatch
if(requestPath.contains("67898")){
     return "user/67898"
}else if (requestPath.contains("67899")){
	return "user/67899"
}else if (requestPath.contains("67900")){
	return "user/67900"
}else if (requestPath.contains("67902")){
	return "Error"
}



</con:dispatchPath><con:response name="user/67898" id="dc1a3f6d-3bc3-4d48-ad1b-deabfdc07b05" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"Employees":{
		"employee":[{
			"id":67898
			"name":"Hello"
			
		}]
	}
}
</con:responseContent><con:header><con:name>status</con:name><con:value>OK</con:value></con:header></con:response><con:response name="user/67899" id="ced8dc93-d34a-4403-892b-13911607c7e4" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"Employees":{
		"employee":[{
			"id":67899
			"name":"Hello"
			
		}]
	}
}
</con:responseContent><con:header><con:name>status</con:name><con:value/></con:header></con:response><con:response name="user/67900" id="ffa411c1-9eb8-4b6b-8ded-8f7415d4d35a" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
	"Employees":{
		"employee":[{
			"id":67900
			"name":"Hello"
			
		}]
	}
}
</con:responseContent><con:header><con:name>status </con:name><con:value/></con:header></con:response><con:response name="Error" id="b550bd65-d179-48b9-83fa-b81a93265e3b" httpResponseStatus="400" mediaType="application/json"><con:settings/><con:responseContent>This is a bad request. please check the URI</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/user/67901" method="POST" resourcePath="/user/67901" id="c6471323-b494-4212-84fe-01bc635bc424"><con:settings/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="user/67901" id="f1f39c18-7bd2-4bcd-8c2e-51febf70e5f0" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:script>context.setProperty("key", (Math.random()*100000))</con:script><con:responseContent>{
"key":${key}
}</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>